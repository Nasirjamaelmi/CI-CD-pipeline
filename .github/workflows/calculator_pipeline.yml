# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      PYTHONPATH: ./
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Setup Python and install dependencies
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: pip install -r BE/requirements.txt

      # Start Selenium Docker container
      - name: Start Selenium Docker container
        run: |
          docker run --name selenium -d --add-host host.docker.internal:host-gateway -p 4444:4444 -p 5900:5900 --shm-size="2g" selenium/standalone-chrome:4.2.1-20220531
          sleep 10  # Give Selenium some time to start up

      # Start Calculator with Docker Compose
      - name: Start Calculator with Docker Compose
        run: |
          cd pipeline
          docker compose -p webcalculator up -d
          sleep 5  # Give the services some time to start up
        
      # Run pytest to execute the tests
      - name: Run pytest
        run: pytest --junit-xml=report.xml

      # Publish the test report
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()  # Always run even if the previous step fails
        with:
          report_paths: "**/*.xml"

      # Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: judevops.azurecr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      # Build and push Docker image to Azure Container Registry
      - name: Build and Push Docker Image
        run: docker build --push --tag judevops.azurecr.io/nasir_jama_elmi-calculator BE/
